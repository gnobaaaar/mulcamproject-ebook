{"ast":null,"code":"var _jsxFileName = \"/Users/dengseum/repo/multiicampus21_project/front/src/components/WeBook/view/MemoEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport styled from 'styled-components';\nimport jwtDecode from 'jwt-decode';\nimport './MemoEditor.css';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyBlock = styled.div`\n  .wrapper-class {\n    width: 100%;\n    margin: 0 auto;\n    margin-bottom: 4rem;\n  }\n  .editor {\n    height: 500px !important;\n    border: 1px solid #f1f1f1 !important;\n    padding: 5px !important;\n    border-radius: 2px !important;\n  }\n`;\n_c = MyBlock;\nconst IntroduceContent = styled.div`\n  position: relative;\n  border: 0.0625rem solid #d7e2eb;\n  border-radius: 0.75rem;\n  overflow: hidden;\n  padding: 1.5rem;\n  width: 80%;\n  margin: 0 auto;\n  margin-bottom: 4rem;\n`;\n_c2 = IntroduceContent;\n\nfunction MemoEditor(props) {\n  _s();\n\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const UserId = jwtDecode(localStorage.token);\n  let m = '';\n  const editorToHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n  const memoContent = props.memoContent;\n  const htmlToEditor = memoContent;\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n    props.onSetMemoProp('memoContent', editorToHtml);\n  };\n\n  useEffect(() => {\n    // 에디터 초기값 설정\n    const blocksFromHtml = htmlToDraft(htmlToEditor);\n\n    if (blocksFromHtml) {\n      const {\n        contentBlocks,\n        entityMap\n      } = blocksFromHtml;\n      const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap); // ContentState를 EditorState기반으로 새 개체를 반환한다고 하더군요\n\n      const editorState = EditorState.createWithContent(contentState);\n      setEditorState(editorState);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyBlock, {\n      children: /*#__PURE__*/_jsxDEV(Editor // 에디터와 툴바 모두에 적용되는 클래스\n      , {\n        wrapperClassName: \"wrapper-class\" // 에디터 주변에 적용된 클래스\n        ,\n        editorClassName: \"editor\" // 툴바 주위에 적용된 클래스\n        ,\n        toolbarClassName: \"toolbar-class\" // 툴바 설정\n        ,\n        toolbar: {\n          list: {\n            inDropdown: true\n          },\n          textAlign: {\n            inDropdown: true\n          },\n          link: {\n            inDropdown: true\n          },\n          history: {\n            inDropdown: false\n          }\n        },\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\",\n        localization: {\n          locale: 'ko'\n        },\n        editorState: editorState,\n        onEditorStateChange: onEditorStateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IntroduceContent, {\n      dangerouslySetInnerHTML: {\n        __html: editorToHtml\n      },\n      onChange: e => {\n        console.log(e.target.dangerouslySetInnerHTML);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"memoBtn\",\n        onClick: () => {\n          console.log(props.memo.memoId);\n          axios.put(`http://choi1994.iptime.org:8000/api/memo/update/${props.memo.memoId}/`, {\n            memoId: props.memo.memoId,\n            memoContent: props.memo.memoContent\n          }, {\n            headers: {\n              Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n          });\n          alert('저장되었습니다');\n        },\n        children: \"\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MemoEditor, \"H1S//Kawa6VxNjMXli63CJgW1YE=\");\n\n_c3 = MemoEditor;\nexport default MemoEditor;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyBlock\");\n$RefreshReg$(_c2, \"IntroduceContent\");\n$RefreshReg$(_c3, \"MemoEditor\");","map":{"version":3,"sources":["/Users/dengseum/repo/multiicampus21_project/front/src/components/WeBook/view/MemoEditor.js"],"names":["React","useEffect","useState","Editor","styled","jwtDecode","EditorState","convertToRaw","ContentState","draftToHtml","htmlToDraft","axios","MyBlock","div","IntroduceContent","MemoEditor","props","editorState","setEditorState","createEmpty","UserId","localStorage","token","m","editorToHtml","getCurrentContent","memoContent","htmlToEditor","onEditorStateChange","onSetMemoProp","blocksFromHtml","contentBlocks","entityMap","contentState","createFromBlockArray","createWithContent","list","inDropdown","textAlign","link","history","locale","__html","e","console","log","target","dangerouslySetInnerHTML","marginBottom","memo","memoId","put","headers","Authorization","getItem","alert"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport styled from 'styled-components';\nimport jwtDecode from 'jwt-decode';\nimport './MemoEditor.css';\n\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\nimport axios from 'axios';\n\nconst MyBlock = styled.div`\n  .wrapper-class {\n    width: 100%;\n    margin: 0 auto;\n    margin-bottom: 4rem;\n  }\n  .editor {\n    height: 500px !important;\n    border: 1px solid #f1f1f1 !important;\n    padding: 5px !important;\n    border-radius: 2px !important;\n  }\n`;\n\nconst IntroduceContent = styled.div`\n  position: relative;\n  border: 0.0625rem solid #d7e2eb;\n  border-radius: 0.75rem;\n  overflow: hidden;\n  padding: 1.5rem;\n  width: 80%;\n  margin: 0 auto;\n  margin-bottom: 4rem;\n`;\n\nfunction MemoEditor(props) {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const UserId = jwtDecode(localStorage.token);\n  let m = '';\n\n  const editorToHtml = draftToHtml(\n    convertToRaw(editorState.getCurrentContent())\n  );\n  const memoContent = props.memoContent;\n  const htmlToEditor = memoContent;\n\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState);\n    props.onSetMemoProp(\n      'memoContent', editorToHtml\n    );\n  };\n\n  useEffect(() => {\n    // 에디터 초기값 설정\n    const blocksFromHtml = htmlToDraft(htmlToEditor);\n    if (blocksFromHtml) {\n      const {contentBlocks, entityMap} = blocksFromHtml;\n      const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n      // ContentState를 EditorState기반으로 새 개체를 반환한다고 하더군요\n      const editorState = EditorState.createWithContent(contentState);\n      setEditorState(editorState);\n    }\n  }, []);\n\n  return (\n      <div>\n        <MyBlock>\n          <Editor\n              // 에디터와 툴바 모두에 적용되는 클래스\n              wrapperClassName=\"wrapper-class\"\n              // 에디터 주변에 적용된 클래스\n              editorClassName=\"editor\"\n              // 툴바 주위에 적용된 클래스\n              toolbarClassName=\"toolbar-class\"\n              // 툴바 설정\n              toolbar={{\n                list: { inDropdown: true },\n                textAlign: { inDropdown: true },\n                link: { inDropdown: true },\n                history: { inDropdown: false },\n              }}\n              placeholder=\"내용을 작성해주세요.\"\n              localization={{\n                locale: 'ko',\n              }}\n              editorState={editorState}\n              onEditorStateChange={onEditorStateChange}\n          />\n        </MyBlock>\n          <IntroduceContent dangerouslySetInnerHTML={{ __html: editorToHtml }} onChange={(e)=>{\n            console.log(e.target.dangerouslySetInnerHTML);\n          }\n          } />\n        <div style={{textAlign: 'center', marginBottom: '20px'}}>\n          <button className='memoBtn'\n              onClick={() => {\n                console.log(props.memo.memoId);\n                axios.put(`http://choi1994.iptime.org:8000/api/memo/update/${props.memo.memoId}/`, {\n                  memoId: props.memo.memoId,\n                  memoContent: props.memo.memoContent\n                }, {\n                  headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                  }\n                });\n                alert('저장되었습니다');\n              }}\n          >\n            저장\n          </button>\n        </div>\n      </div>\n  );\n}\n\nexport default MemoEditor;\n"]},"metadata":{},"sourceType":"module"}