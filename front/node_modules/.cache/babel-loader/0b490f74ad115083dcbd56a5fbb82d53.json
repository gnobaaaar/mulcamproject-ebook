{"ast":null,"code":"import _initializerDefineProperty from \"/Users/dengseum/repo/multiicampus21_project/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/dengseum/repo/multiicampus21_project/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/dengseum/repo/multiicampus21_project/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3;\n\nimport { makeObservable, action, observable, runInAction } from 'mobx';\nimport CommunityApi from '../api/CommunityApi';\nlet CommunityStore = (_class = class CommunityStore {\n  constructor() {\n    _initializerDefineProperty(this, \"communities\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"community\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"Message\", _descriptor3, this);\n\n    this.communityApi = new CommunityApi();\n    makeObservable(this);\n  }\n\n  setCommunityProp(name, value) {\n    this.community = { ...this.community,\n      [name]: value\n    };\n  }\n\n  async addCommunity() {\n    const result = await this.communityApi.communicationCreate(this.community);\n\n    if (result == null) {\n      this.message = '추가되지 않았습니다.';\n    }\n\n    this.communities = this.communities.concat(this.community);\n  }\n\n  async removeCommunity() {\n    await this.communityApi.communicationDelete(this.community.communication_id);\n    const result = await this.communityApi.communicationList();\n    runInAction(() => {\n      this.communities = result;\n    });\n    runInAction(() => {\n      this.community = {};\n    });\n  }\n\n  async modifyCommunity() {\n    await this.communityApi.communicationUpdate(this.community.communication_id, this.community);\n    const result = await this.communityApi.communicationList();\n    runInAction(() => {\n      this.communities = result;\n    });\n    runInAction(() => {\n      this.community = {};\n    });\n  }\n\n  async selectCommunity(id) {\n    const result = await this.communityApi.communicationDetail(id);\n    runInAction(() => {\n      this.community = result;\n    });\n  }\n\n  async selectAll() {\n    const result = await this.communityApi.communicationList();\n    runInAction(() => {\n      this.communities = result;\n    });\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"communities\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"community\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      communication_id: '',\n      communication_title: '',\n      communication_content: '',\n      communication_img: '',\n      communication_date: '',\n      communication_views: '',\n      communication_category: '',\n      user_pk: ''\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"Message\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setCommunityProp\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setCommunityProp\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addCommunity\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addCommunity\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeCommunity\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeCommunity\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"modifyCommunity\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"modifyCommunity\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"selectCommunity\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"selectCommunity\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"selectAll\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"selectAll\"), _class.prototype)), _class);\nexport default new CommunityStore();","map":{"version":3,"sources":["/Users/dengseum/repo/multiicampus21_project/front/src/components/Communication/store/CommunityStore.js"],"names":["makeObservable","action","observable","runInAction","CommunityApi","CommunityStore","constructor","communityApi","setCommunityProp","name","value","community","addCommunity","result","communicationCreate","message","communities","concat","removeCommunity","communicationDelete","communication_id","communicationList","modifyCommunity","communicationUpdate","selectCommunity","id","communicationDetail","selectAll","communication_title","communication_content","communication_img","communication_date","communication_views","communication_category","user_pk"],"mappings":";;;;;;AAAA,SAASA,cAAT,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,WAA7C,QAAgE,MAAhE;AACA,OAAOC,YAAP,MAAyB,qBAAzB;IAEMC,c,aAAN,MAAMA,cAAN,CAAqB;AASjBC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AAAA;;AAAA,SAFdC,YAEc,GAFC,IAAIH,YAAJ,EAED;AACZJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAGDQ,EAAAA,gBAAgB,CAACC,IAAD,EAAOC,KAAP,EAAc;AAC5B,SAAKC,SAAL,GAAiB,EACf,GAAG,KAAKA,SADO;AAEf,OAACF,IAAD,GAAQC;AAFO,KAAjB;AAID;;AAGiB,QAAZE,YAAY,GAAG;AACnB,UAAMC,MAAM,GAAG,MAAM,KAAKN,YAAL,CAAkBO,mBAAlB,CAAsC,KAAKH,SAA3C,CAArB;;AACA,QAAIE,MAAM,IAAI,IAAd,EAAoB;AAClB,WAAKE,OAAL,GAAe,aAAf;AACD;;AACD,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,MAAjB,CAAwB,KAAKN,SAA7B,CAAnB;AACD;;AAGoB,QAAfO,eAAe,GAAG;AACtB,UAAM,KAAKX,YAAL,CAAkBY,mBAAlB,CAAsC,KAAKR,SAAL,CAAeS,gBAArD,CAAN;AACA,UAAMP,MAAM,GAAG,MAAM,KAAKN,YAAL,CAAkBc,iBAAlB,EAArB;AACAlB,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKa,WAAL,GAAmBH,MAAnB;AACD,KAFU,CAAX;AAGAV,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKQ,SAAL,GAAiB,EAAjB;AACD,KAFU,CAAX;AAGD;;AAGoB,QAAfW,eAAe,GAAG;AACtB,UAAM,KAAKf,YAAL,CAAkBgB,mBAAlB,CAAsC,KAAKZ,SAAL,CAAeS,gBAArD,EAAuE,KAAKT,SAA5E,CAAN;AACA,UAAME,MAAM,GAAG,MAAM,KAAKN,YAAL,CAAkBc,iBAAlB,EAArB;AACAlB,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKa,WAAL,GAAmBH,MAAnB;AACD,KAFU,CAAX;AAGAV,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKQ,SAAL,GAAiB,EAAjB;AACD,KAFU,CAAX;AAGD;;AAGoB,QAAfa,eAAe,CAACC,EAAD,EAAK;AACxB,UAAMZ,MAAM,GAAG,MAAM,KAAKN,YAAL,CAAkBmB,mBAAlB,CAAsCD,EAAtC,CAArB;AACAtB,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKQ,SAAL,GAAiBE,MAAjB;AACD,KAFU,CAAX;AAGD;;AAGc,QAATc,SAAS,GAAG;AAChB,UAAMd,MAAM,GAAG,MAAM,KAAKN,YAAL,CAAkBc,iBAAlB,EAArB;AACAlB,IAAAA,WAAW,CAAC,MAAI;AACd,WAAKa,WAAL,GAAmBH,MAAnB;AACD,KAFU,CAAX;AAGD;;AApEgB,C,6EAChBX,U;;;;;WAAyB,E;;6EAEzBA,U;;;;;WAAuB;AAAEkB,MAAAA,gBAAgB,EAAE,EAApB;AAAwBQ,MAAAA,mBAAmB,EAAE,EAA7C;AAAiDC,MAAAA,qBAAqB,EAAE,EAAxE;AAA4EC,MAAAA,iBAAiB,EAAE,EAA/F;AAAmGC,MAAAA,kBAAkB,EAAE,EAAvH;AAA2HC,MAAAA,mBAAmB,EAAE,EAAhJ;AAAoJC,MAAAA,sBAAsB,EAAE,EAA5K;AAAgLC,MAAAA,OAAO,EAAE;AAAzL,K;;2EAEvBhC,U;;;;;WAAqB,E;;qEAQrBD,M,0JAQAA,M,yJASAA,M,4JAYAA,M,4JAYAA,M,sJAQAA,M;AAQL,eAAe,IAAII,cAAJ,EAAf","sourcesContent":["import { makeObservable, action, observable, runInAction } from 'mobx';\nimport CommunityApi from '../api/CommunityApi';\n\nclass CommunityStore {\n    @observable communities = [];\n\n    @observable community = { communication_id: '', communication_title: '', communication_content: '', communication_img: '', communication_date: '', communication_views: '', communication_category: '', user_pk: ''};\n\n    @observable Message = '';\n\n    communityApi = new CommunityApi();\n\n    constructor() {\n      makeObservable(this);\n    }\n\n    @action\n    setCommunityProp(name, value) {\n      this.community = {\n        ...this.community,\n        [name]: value,\n      };\n    }\n\n    @action\n    async addCommunity() {\n      const result = await this.communityApi.communicationCreate(this.community);\n      if (result == null) {\n        this.message = '추가되지 않았습니다.';\n      }\n      this.communities = this.communities.concat(this.community);\n    }\n\n    @action\n    async removeCommunity() {\n      await this.communityApi.communicationDelete(this.community.communication_id);\n      const result = await this.communityApi.communicationList();\n      runInAction(() => {\n        this.communities = result;\n      });\n      runInAction(() => {\n        this.community = {};\n      });\n    }\n\n    @action\n    async modifyCommunity() {\n      await this.communityApi.communicationUpdate(this.community.communication_id, this.community);\n      const result = await this.communityApi.communicationList();\n      runInAction(() => {\n        this.communities = result;\n      });\n      runInAction(() => {\n        this.community = {};\n      });\n    }\n\n    @action\n    async selectCommunity(id) {\n      const result = await this.communityApi.communicationDetail(id);\n      runInAction(() => {\n        this.community = result;\n      });\n    }\n\n    @action\n    async selectAll() {\n      const result = await this.communityApi.communicationList();\n      runInAction(()=>{\n        this.communities = result;\n      });\n    }\n}\nexport default new CommunityStore();\n"]},"metadata":{},"sourceType":"module"}