{"ast":null,"code":"var _jsxFileName = \"/Users/dengseum/repo/multiicampus21_project/front/src/components/WeBook/view/MainBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './MainBook.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainBook(props) {\n  _s();\n\n  const [dataList, setDataList] = useState([]);\n  let memoContent;\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    sub: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginBottom: '10px',\n      marginTop: '10px'\n    },\n    img: {\n      borderRadius: '6px'\n    },\n    title: {\n      fontWeight: 'bold'\n    }\n  });\n  const classes = useStyles();\n  useEffect(() => {\n    const take = async () => {\n      const {\n        data\n      } = await axios.get('http://choi1994.iptime.org:8000/api/book/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      });\n      setDataList(data);\n    };\n\n    take();\n  }, []); // eslint-disable-next-line array-callback-return\n\n  const doc = dataList.map(post => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subBox\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n          className: classes.sub,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.img,\n            src: post.bookImg,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.title,\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"h2\",\n              children: post.bookTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), post.bookWritter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/List/',\n              state: {\n                bookId: post.bookId\n              }\n            },\n            style: {\n              textDecoration: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                axios.get(`http://choi1994.iptime.org:8000/api/memo/myMemo/${post.bookId}/`, {\n                  headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                  }\n                }).then(response => {\n                  if (response.data.memoDate) {\n                    console.log('메모가 존재합니다');\n                  }\n                }).catch(response => {\n                  console.log(response);\n                  axios.post('http://choi1994.iptime.org:8000/api/memo/create/', {\n                    data: {\n                      bookId: post.bookId\n                    }\n                  }, {\n                    headers: {\n                      Authorization: `JWT ${localStorage.getItem('token')}`\n                    }\n                  });\n                  console.log('메모가 새로 생성되었습니다 +' + post.bookId);\n                  alert('새로운 메모가 생성되었습니다');\n                });\n              },\n              children: \"\\uCC45 \\uBAA9\\uB85D \\uBCF4\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dataList && localStorage.token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MainBox\",\n        children: doc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '40px',\n        textAlign: 'center'\n      },\n      children: \"\\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainBook, \"GSY2yPG/8WJo9/Z+2pvUtpVpZxg=\", false, function () {\n  return [useStyles];\n});\n\n_c = MainBook;\nexport default MainBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBook\");","map":{"version":3,"sources":["/Users/dengseum/repo/multiicampus21_project/front/src/components/WeBook/view/MainBook.js"],"names":["React","useEffect","useState","axios","Link","Route","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","MainBook","props","dataList","setDataList","memoContent","useStyles","root","maxWidth","display","flexDirection","alignItems","justifyContent","sub","marginBottom","marginTop","img","borderRadius","title","fontWeight","classes","take","data","get","headers","Authorization","localStorage","getItem","doc","map","post","bookImg","bookTitle","bookWritter","pathname","state","bookId","textDecoration","then","response","memoDate","console","log","catch","alert","token","textAlign"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link, Route} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './MainBook.css';\n\nfunction MainBook(props) {\n  const [dataList, setDataList] = useState([]);\n  let memoContent;\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    sub: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginBottom: '10px',\n      marginTop: '10px'\n    },\n    img: {\n      borderRadius: '6px'\n    },\n    title: {\n      fontWeight: 'bold'\n    }\n  });\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const take = async () => {\n      const {data} = await axios.get('http://choi1994.iptime.org:8000/api/book/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }\n      );\n      setDataList(data);\n    };\n    take();\n  }, []);\n\n  // eslint-disable-next-line array-callback-return\n  const doc = dataList.map((post) => {\n    return (\n        <div className='subBox'>\n              <Card className={classes.root}>\n                <CardActionArea className={classes.sub}>\n                  <img className={classes.img} src={post.bookImg} alt=\"\"/>\n                  <CardContent>\n                    <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n                      {post.bookTitle}\n                    </Typography>\n                    {post.bookWritter}\n                    {/* {post.bookIntro} */}\n                  </CardContent>\n                </CardActionArea>\n                <CardActions>\n                  <Link to={{\n                    pathname: '/List/',\n                    state: {\n                      bookId: post.bookId\n                    }\n                  }} style={{textDecoration: 'none'}}>\n                    {/* 메모가 있으면 콘솔에 date 출력, 없으면 생성 */}\n                    <Button onClick={()=>{\n                      axios.get(`http://choi1994.iptime.org:8000/api/memo/myMemo/${post.bookId}/`, {\n                        headers: {\n                          Authorization: `JWT ${localStorage.getItem('token')}`\n                        }\n                      }).then((response)=>{\n                        if (response.data.memoDate) {\n                          console.log('메모가 존재합니다');\n                        }\n                      }).catch((response)=>{\n                        console.log(response);\n                        axios.post('http://choi1994.iptime.org:8000/api/memo/create/', {\n                          data: {\n                            bookId: post.bookId\n                          }\n                        }, {\n                          headers: {\n                            Authorization: `JWT ${localStorage.getItem('token')}`\n                          }\n                        });\n                        console.log('메모가 새로 생성되었습니다 +' + post.bookId);\n                        alert('새로운 메모가 생성되었습니다');\n                      });\n                    }}>\n                    책 목록 보기\n                    </Button>\n                  </Link>\n                </CardActions>\n              </Card>\n\n        </div>\n    );\n  });\n\n  return (\n        <div>\n          { dataList && localStorage.token\n            ? (\n                <div>\n                <div className='MainBox'>\n                  {doc}\n                </div>\n                </div>\n            )\n            : (\n                  <div style={{marginTop: '40px', textAlign: 'center'}}>\n                    로그인이 필요합니다\n                  </div>\n            )}\n        </div>\n  );\n}\n\nexport default MainBook;\n"]},"metadata":{},"sourceType":"module"}