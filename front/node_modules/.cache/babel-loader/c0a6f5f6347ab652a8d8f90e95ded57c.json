{"ast":null,"code":"var _jsxFileName = \"/Users/dengseum/repo/multiicampus21_project/front/src/components/WeBook/BookCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport S3upload from '../S3upload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookCreate(props) {\n  _s();\n\n  const [BookImg, setBookImg] = useState();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [bookMakeList, setBookMakeList] = useState({\n    bookTitle: '',\n    bookWritter: '',\n    bookPublisher: '',\n    bookImg: ''\n  });\n  const [flag, setFlag] = useState(false);\n  const [bookId, setBookId] = useState('');\n  const [imgBase64, setImgBase64] = useState(''); // 파일 base64\n\n  const [imgFile, setImgFile] = useState(null); // 파일\n\n  const InsertBook = () => {\n    setBookImg(S3upload(imgFile)); // axios.post('http://localhost:8000/api/book/create/', {\n    //   data:\n    //     bookMakeList\n    // }, {\n    //   headers: {\n    //     Authorization: `JWT ${localStorage.getItem('token')}`,\n    //   }\n    // }).then((response) => {\n    //   setBookId(response.data.bookId);\n    //   setFlag(true);\n    // }\n    //\n    // );\n  }; // console.log(BookImg);\n  // console.log(imgBase64);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: '150px',\n        height: '150px'\n      },\n      src: imgBase64\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"imgFile\",\n        id: \"imgFile\",\n        onChange: event => {\n          let reader = new FileReader();\n\n          reader.onloadend = () => {\n            // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n            const base64 = reader.result;\n\n            if (base64) {\n              setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n            }\n          };\n\n          if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n\n            setImgFile(event.target.files[0]); // 파일 상태 업데이트\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputsm\",\n        children: \"\\uCC45 \\uC81C\\uBAA9:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control input-sm\",\n        onChange: e => setBookMakeList({ ...bookMakeList,\n          bookTitle: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputsm\",\n        children: \"\\uC9C0\\uC740\\uC774: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control input-sm\",\n        onChange: e => setBookMakeList({ ...bookMakeList,\n          bookWritter: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputsm\",\n        children: \"\\uCD9C\\uD310\\uC0AC: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control input-sm\",\n        onChange: e => setBookMakeList({ ...bookMakeList,\n          bookPublisher: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), flag ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"header-dashboard\",\n        to: {\n          pathname: `/ArticleCreate/${bookMakeList.bookTitle}`,\n          state: {\n            bookTitle: bookMakeList.bookTitle,\n            bookId: bookId\n          }\n        },\n        children: \"\\uB118\\uC5B4\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: InsertBook,\n      children: \"\\uAE00\\uC791\\uC131\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookCreate, \"Nu0etV5OwX1Q9mNAkZ3ibQOQjtQ=\");\n\n_c = BookCreate;\nexport default BookCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookCreate\");","map":{"version":3,"sources":["/Users/dengseum/repo/multiicampus21_project/front/src/components/WeBook/BookCreate.js"],"names":["React","useEffect","useState","Link","axios","S3upload","BookCreate","props","BookImg","setBookImg","selectedFile","setSelectedFile","bookMakeList","setBookMakeList","bookTitle","bookWritter","bookPublisher","bookImg","flag","setFlag","bookId","setBookId","imgBase64","setImgBase64","imgFile","setImgFile","InsertBook","marginTop","width","height","event","reader","FileReader","onloadend","base64","result","toString","target","files","readAsDataURL","e","value","pathname","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC;AAC/CY,IAAAA,SAAS,EAAE,EADoC;AAE/CC,IAAAA,WAAW,EAAE,EAFkC;AAG/CC,IAAAA,aAAa,EAAE,EAHgC;AAI/CC,IAAAA,OAAO,EAAE;AAJsC,GAAD,CAAhD;AAMA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C,CAZyB,CAYuB;;AAChD,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,IAAD,CAAtC,CAbyB,CAaoB;;AAC7C,QAAMwB,UAAU,GAAG,MAAI;AACrBjB,IAAAA,UAAU,CAACJ,QAAQ,CAACmB,OAAD,CAAT,CAAV,CADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAfD,CAdyB,CA8BzB;AACA;;;AACA,sBACM;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA,4BACQ;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAZ;AAA+C,MAAA,GAAG,EAAEP;AAApD;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,EAAE,EAAC,SAArC;AAA+C,QAAA,QAAQ,EAAGQ,KAAD,IAAW;AAClE,cAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,UAAAA,MAAM,CAACE,SAAP,GAAmB,MAAM;AACvB;AAEA,kBAAMC,MAAM,GAAGH,MAAM,CAACI,MAAtB;;AACA,gBAAID,MAAJ,EAAY;AACVX,cAAAA,YAAY,CAACW,MAAM,CAACE,QAAP,EAAD,CAAZ,CADU,CACuB;AAClC;AACF,WAPD;;AAQA,cAAIN,KAAK,CAACO,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAJ,EAA2B;AACzBP,YAAAA,MAAM,CAACQ,aAAP,CAAqBT,KAAK,CAACO,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAArB,EADyB,CACoB;;AAC7Cb,YAAAA,UAAU,CAACK,KAAK,CAACO,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAV,CAFyB,CAEU;AACpC;AACF;AAfD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR,eAqBQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,uBAAjB;AAAyC,QAAA,QAAQ,EAAGE,CAAC,IAAI3B,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkBE,UAAAA,SAAS,EAAE0B,CAAC,CAACH,MAAF,CAASI;AAAtC,SAAD;AAAxE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArBR,eAyBQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,uBAAjB;AAAyC,QAAA,QAAQ,EAAED,CAAC,IAAI3B,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkBG,UAAAA,WAAW,EAAEyB,CAAC,CAACH,MAAF,CAASI;AAAxC,SAAD;AAAvE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBR,eA6BQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,uBAAjB;AAAyC,QAAA,QAAQ,EAAED,CAAC,IAAI3B,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkBI,UAAAA,aAAa,EAAEwB,CAAC,CAACH,MAAF,CAASI;AAA1C,SAAD;AAAvE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BR,EAiCUvB,IAAI,gBACF;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA,6BACA,QAAC,IAAD;AACI,QAAA,SAAS,EAAC,kBADd;AACiC,QAAA,EAAE,EAAE;AAE/BwB,UAAAA,QAAQ,EAAG,kBAAiB9B,YAAY,CAACE,SAAU,EAFpB;AAG/B6B,UAAAA,KAAK,EAAE;AACL7B,YAAAA,SAAS,EAAEF,YAAY,CAACE,SADnB;AAELM,YAAAA,MAAM,EAAEA;AAFH;AAHwB,SADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADE,gBAYU;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAEM,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAmDD;;GAnFQpB,U;;KAAAA,U;AAqFT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport S3upload from '../S3upload';\n\nfunction BookCreate(props) {\n  const [BookImg, setBookImg] = useState();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [bookMakeList, setBookMakeList] = useState({\n    bookTitle: '',\n    bookWritter: '',\n    bookPublisher: '',\n    bookImg: ''});\n\n  const [flag, setFlag] = useState(false);\n  const [bookId, setBookId] = useState('');\n\n  const [imgBase64, setImgBase64] = useState(''); // 파일 base64\n  const [imgFile, setImgFile] = useState(null);// 파일\n  const InsertBook = ()=>{\n    setBookImg(S3upload(imgFile));\n    // axios.post('http://localhost:8000/api/book/create/', {\n    //   data:\n    //     bookMakeList\n    // }, {\n    //   headers: {\n    //     Authorization: `JWT ${localStorage.getItem('token')}`,\n    //   }\n    // }).then((response) => {\n    //   setBookId(response.data.bookId);\n    //   setFlag(true);\n    // }\n    //\n    // );\n  };\n  // console.log(BookImg);\n  // console.log(imgBase64);\n  return (\n        <div style={{marginTop: '40px'}}>\n                <img style={{width: '150px', height: '150px'}} src={imgBase64} />\n                <div>\n                    <input type=\"file\" name=\"imgFile\" id=\"imgFile\" onChange={(event) => {\n                      let reader = new FileReader();\n\n                      reader.onloadend = () => {\n                        // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n\n                        const base64 = reader.result;\n                        if (base64) {\n                          setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n                        }\n                      };\n                      if (event.target.files[0]) {\n                        reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n                        setImgFile(event.target.files[0]); // 파일 상태 업데이트\n                      }\n                    }}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"inputsm\" >책 제목:</label>\n                    <input className=\"form-control input-sm\" onChange= {e => setBookMakeList({...bookMakeList, bookTitle: e.target.value})}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"inputsm\">지은이: </label>\n                    <input className=\"form-control input-sm\" onChange={e => setBookMakeList({...bookMakeList, bookWritter: e.target.value})}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"inputsm\">출판사: </label>\n                    <input className=\"form-control input-sm\" onChange={e => setBookMakeList({...bookMakeList, bookPublisher: e.target.value})}/>\n                </div>\n                { flag\n                  ? <button type=\"submit\" className=\"btn btn-primary\" >\n                    <Link\n                        className=\"header-dashboard\" to={{\n\n                          pathname: `/ArticleCreate/${bookMakeList.bookTitle}`,\n                          state: {\n                            bookTitle: bookMakeList.bookTitle,\n                            bookId: bookId\n                          }\n                        }}\n                    >넘어가기</Link>\n                    </button> : <button type=\"submit\" className=\"btn btn-primary\" onClick={InsertBook}>글작성하기</button>\n                }\n\n        </div>\n  );\n}\n\nexport default BookCreate;\n"]},"metadata":{},"sourceType":"module"}